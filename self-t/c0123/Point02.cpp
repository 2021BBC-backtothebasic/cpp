#include <iostream>

using namespace std;

int main()
{
	cout << "배열 & 포인터" << endl;

	int arrNum[5] = { 0, 1, 2, 3, 4 };
	int* pArrNum = arrNum; //&arrNum[0] 배열의 이름은 곧 주소.
	for(int i = 0; i< 5; i++)
	{
		cout << " arrNum[" << i << "]: " << &arrNum[i];
		cout << endl;
	}

	cout << endl;

	for(int i = 0; i< 5; i++)
	{
		cout << " *(pArrNum + " << i << "): " << *(pArrNum + i ) << " (pArrNum + " << i << "): " << (pArrNum + i) << endl;
		cout << arrNum[3] << " " << 3[arrNum] << endl; //arrNum[3] = *(arrNum + 3) = *(3 + arrNum) = 3[arrNum]
	}

}


/*        일차원 배열[5]        //실제 메모리에 저장되는 형태는 아니며 이해하기 위해서 입체적으로 표현
     [0]   [1]   [2]   [3]   [4]
   ┌─────┬─────┬─────┬─────┬─────┐
   │  0  │  1  │  2  │  3  │  4  │
   └─────┴─────┴─────┴─────┴─────┘
       int arrNum[5]

                                 Address│   메모리
 pArrNum   (pArrNum + 0)        ────────┼────────────────────
 arrNum    →→ arrNum[0]    →→→    0x00  │
                                  0x01  │
                                  0x02  │      5
                                  0x03  │
             (pArrNum + 1)      ────────┼────────────────────
              arrNum[1]    →→→    0x04  │
                                  0x05  │
                                  0x06  │      4
                                  0x07  │
             (pArrNum + 2)      ────────┼────────────────────
              arrNum[2]    →→→    0x08  │
                                  0x09  │
                                  0x0A  │      3
                                  0x0B  │
             (pArrNum + 3)      ────────┼────────────────────
              arrNum[3]    →→→    0x0C  │
                                  0x0D  │
                                  0x0E  │      2
                                  0x0F  │
            (pArrNum + 4)       ────────┼────────────────────
              arrNum[4]    →→→    0x10  │
                                  0x11  │
                                  0x12  │      1
                                  0x13  │
                                ────────┼────────────────────



          이차원 배열[3][5]        //실제 메모리에 저장되는 형태는 아니며 이해하기 위해서 입체적으로 표현

     [0]   [1]   [2]   [3]   [4]
   ┌─────┬─────┬─────┬─────┬─────┐
   │  5  │  4  │  3  │  2  │  1  │
   └─────┴─────┴─────┴─────┴─────┘
   ┌─────┬─────┬─────┬─────┬─────┐
   │  6  │  2  │  3  │  4  │  5  │
   └─────┴─────┴─────┴─────┴─────┘
   ┌─────┬─────┬─────┬─────┬─────┐
   │  5  │  6  │  7  │  8  │  9  │
   └─────┴─────┴─────┴─────┴─────┘



                              int arrNum[3][5]

                                 Address│   메모리
                                ────────┼────────────────────
 arrNum[0] →→ arrNum[0][0] →→→    0x00  │
                                  0x01  │
                                  0x02  │      5
                                  0x03  │
                                ────────┼────────────────────
              arrNum[0][1] →→→    0x04  │
                                  0x05  │
                                  0x06  │      4
                                  0x07  │
                                ────────┼────────────────────
              arrNum[0][2] →→→    0x08  │
                                  0x09  │
                                  0x0A  │      3
                                  0x0B  │
                                ────────┼────────────────────
              arrNum[0][3] →→→    0x0C  │
                                  0x0D  │
                                  0x0E  │      2
                                  0x0F  │
                                ────────┼────────────────────
              arrNum[0][4] →→→    0x10  │
                                  0x11  │
                                  0x12  │      1
                                  0x13  │
                                ────────┼────────────────────
 arrNum[1] →→ arrNum[1][0] →→→    0x14  │
                                  0x15  │
                                  0x16  │      6
                                  0x17  │
                                ────────┼────────────────────
*/

